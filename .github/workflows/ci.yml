name: ci

on:
  push:
    branches:
      - main
    tags:
      - '*'
    paths:
      - 'rasa/*'
      - '**.yml'
      - 'Dockerfile'
  pull_request:
    branches:
      - main
    tags:
      - '*'
    paths:
      - 'rasa/*'
      - '**.yml'
      - 'Dockerfile'

jobs:
  train_test:
    name: "Train and test model"
    runs-on: ubuntu-latest
    if: github.ref_type != 'tag'
    steps:
      # Checks-out GitHub repository
      # more: https://github.com/actions/checkout
      - name: Checkout
        uses: actions/checkout@master

      - uses: actions/setup-python@v4
        with:
          python-version: '3.8'
          cache: 'pip' # caching pip dependencies

      - run: pip install -r requirements.txt

      - run: python -m spacy download de_core_news_md

      - name: "Train and Test Rasa Demo"
        id: action
        uses: RasaHQ/rasa-train-test-gha@main
        with:
          # List of available tags: https://hub.docker.com/r/rasa/rasa/tags
          rasa_version: "3.3.1-full"
          # In order to add a PR comment with summary
          # a GH Token has to be pass to the GH action
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workspace: ${{ format('{0}/{1}', github.workspace, 'rasa') }}

  train_test_upload:
    name: "Train, test and upload model"
    runs-on: ubuntu-latest
    if: github.ref_type == 'tag'
    steps:
      # Checks-out GitHub repository
      # more: https://github.com/actions/checkout
      - name: Checkout
        uses: actions/checkout@master

      - name: "Train and Test Rasa Demo"
        id: action
        uses: RasaHQ/rasa-train-test-gha@main
        with:
          # List of available tags: https://hub.docker.com/r/rasa/rasa/tags
          rasa_version: "3.3.1-full"
          # In order to add a PR comment with summary
          # a GH Token has to be pass to the GH action
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workspace: ${{ format('{0}/{1}', github.workspace, 'rasa') }}

      # The 'actions/upload-artifact' action to upload files
      # More: https://github.com/actions/upload-artifact
      - uses: actions/upload-artifact@v3
        with:
          name: rasa-cfg
          path: |
            rasa/results
            rasa/reports

      - uses: actions/upload-artifact@v3
        with:
          name: rasa-model
          path: rasa/models

  docker:
    name: "Docker build and push to Amazon ECR"
    runs-on: ubuntu-latest
    needs: train_test_upload
    if: github.ref_type == 'tag'
    steps:
      - name: Checkout ðŸ›Ž
        uses: actions/checkout@master

      - uses: actions/download-artifact@v3
        with:
          name: rasa-model
          path: rasa/models

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - uses: olegtarasov/get-tag@v2.1.2
        id: tagName

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: 312310136925.dkr.ecr.eu-central-1.amazonaws.com/climatechangebot
          ECR_REPOSITORY: chatbot
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$GIT_TAG_NAME .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$GIT_TAG_NAME


